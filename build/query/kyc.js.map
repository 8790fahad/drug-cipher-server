{"version":3,"sources":["../../src/query/kyc.js"],"names":["company_name","company_address","company_email","company_phone","company_website","company_country","logo_url","pl_url","sp_url","query_type","companyId","db","sequelize","query","replacements","error","console","log","kycFun","email","newsLetterFun","pass_phrase","getPendingKYCApi","url","id","updateKycApi"],"mappings":"AAAA;;;;;;;;qEAIO;AAAA,mCACLA,YADK;AAAA,QACLA,YADK,sCACU,EADV;AAAA,sCAELC,eAFK;AAAA,QAELA,eAFK,yCAEa,EAFb;AAAA,oCAGLC,aAHK;AAAA,QAGLA,aAHK,uCAGW,EAHX;AAAA,oCAILC,aAJK;AAAA,QAILA,aAJK,uCAIW,EAJX;AAAA,sCAKLC,eALK;AAAA,QAKLA,eALK,yCAKa,EALb;AAAA,sCAMLC,eANK;AAAA,QAMLA,eANK,yCAMa,EANb;AAAA,+BAOLC,QAPK;AAAA,QAOLA,QAPK,kCAOM,EAPN;AAAA,6BAQLC,MARK;AAAA,QAQLA,MARK,gCAQI,EARJ;AAAA,6BASLC,MATK;AAAA,QASLA,MATK,gCASI,EATJ;AAAA,iCAULC,UAVK;AAAA,QAULA,UAVK,oCAUQ,EAVR;AAAA,gCAWLC,SAXK;AAAA,QAWLA,SAXK,mCAWO,EAXP;AAAA;AAAA;AAAA;AAAA;AAaL,gBAAI;AACFC,+BAAGC,SAAH,CAAaC,KAAb,8JAEE;AACEC,8BAAc;AACZd,4CADY;AAEZC,kDAFY;AAGZC,8CAHY;AAIZC,8CAJY;AAKZC,kDALY;AAMZC,kDANY;AAOZC,oCAPY;AAQZC,gCARY;AASZC,gCATY;AAUZC,wCAVY;AAWZC;AAXY;AADhB,eAFF;AAkBD,aAnBD,CAmBE,OAAOK,KAAP,EAAc;AACdC,sBAAQC,GAAR,CAAYF,KAAZ;AACD;;AAlCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeG,M;;;;;;sEAqCf;AAAA,4BAA+BC,KAA/B;AAAA,QAA+BA,KAA/B,+BAAuC,EAAvC;AAAA;AAAA;AAAA;AAAA;AACL,gBAAI;AACFR,+BAAGC,SAAH,CAAaC,KAAb,6BAA+C;AAC7CC,8BAAc;AACZK;AADY;AAD+B,eAA/C;AAKD,aAND,CAME,OAAOJ,KAAP,EAAc;AACdC,sBAAQC,GAAR,CAAYF,KAAZ;AACD;;AATI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,a;;;;;;sEAYf;AAAA,iCACLX,UADK;AAAA,QACLA,UADK,oCACQ,EADR;AAAA,kCAELY,WAFK;AAAA,QAELA,WAFK,qCAES,EAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKUV,iBAAGC,SAAH,CAAaC,KAAb,uDAEX;AACEC,4BAAc;AACZL,sCADY;AAEZY;AAFY;AADhB,aAFW,CALV;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAeHL,oBAAQC,GAAR;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeK,gB;;;;;;sEAmBf;AAAA,0BACLC,GADK;AAAA,QACLA,GADK,6BACC,EADD;AAAA,iCAELd,UAFK;AAAA,QAELA,UAFK,oCAEQ,EAFR;AAAA,yBAGLe,EAHK;AAAA,QAGLA,EAHK,4BAGA,EAHA;AAAA,kCAILH,WAJK;AAAA,QAILA,WAJK,qCAIS,EAJT;AAAA;AAAA;AAAA;AAAA;AAML,gBAAI;AACFV,+BAAGC,SAAH,CAAaC,KAAb,4DAEE;AACEC,8BAAc;AACZU,wBADY;AAEZD,0BAFY;AAGZd,wCAHY;AAIZY;AAJY;AADhB,eAFF;AAWD,aAZD,CAYE,OAAON,KAAP,EAAc;AACdC,sBAAQC,GAAR,CAAYF,KAAZ;AACD;;AApBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeU,Y;;;;;AAtEtB","file":"kyc.js","sourcesContent":["\"use strict\";\n\nimport db from \"../models\";\n\nexport async function kycFun({\n  company_name = \"\",\n  company_address = \"\",\n  company_email = \"\",\n  company_phone = \"\",\n  company_website = \"\",\n  company_country = \"\",\n  logo_url = \"\",\n  pl_url = \"\",\n  sp_url = \"\",\n  query_type = \"\",\n  companyId = \"\",\n}) {\n  try {\n    db.sequelize.query(\n      `call kyc(:company_name,:company_address,:company_email,:company_phone,:company_website,:company_country,:logo_url,:query_type,:pl_url,:sp_url,:companyId)`,\n      {\n        replacements: {\n          company_name,\n          company_address,\n          company_email,\n          company_phone,\n          company_website,\n          company_country,\n          logo_url,\n          pl_url,\n          sp_url,\n          query_type,\n          companyId,\n        },\n      }\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function newsLetterFun({ email = \"\" }) {\n  try {\n    db.sequelize.query(`call news_letter(:email)`, {\n      replacements: {\n        email,\n      },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getPendingKYCApi({\n  query_type = \"\",\n  pass_phrase = \"\",\n}) {\n  try {\n    return await db.sequelize.query(\n      `call get_pending_company(:query_type,:pass_phrase)`,\n      {\n        replacements: {\n          query_type,\n          pass_phrase,\n        },\n      }\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function updateKycApi({\n  url = \"\",\n  query_type = \"\",\n  id = \"\",\n  pass_phrase = \"\",\n}) {\n  try {\n    db.sequelize.query(\n      `call update_kyc(:id , :query_type, :url,:pass_phrase  )`,\n      {\n        replacements: {\n          id,\n          url,\n          query_type,\n          pass_phrase,\n        },\n      }\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n"]}