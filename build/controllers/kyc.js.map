{"version":3,"sources":["../../src/controllers/kyc.js"],"names":["createCompony","req","res","body","companyName","companyAddress","companyCountry","companyWebsite","companyEmail","companyId","companyPhone","company_name","company_address","company_email","company_phone","company_website","company_country","query_type","then","company","json","success","catch","err","status","createNewsLetterFun","email","news_letter","updateKycPL","query","url","file","path","id","resp","getPendingKYC","pass_phrase","result","updateKycSP","transporter","sendMail","emailTo","templateName","subject","context","error","info","console","log","updateKycAppproved","passPhrase","pass","length","join","link","replace","updateKycReject","regeneratePassPhrase","recoverAccount","message","payload","jwt","sign","expiresIn","token","loadWithToken","verify","decoded"],"mappings":"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","file":"kyc.js","sourcesContent":["import { generatePassPhrase } from \"passphrase-generator\";\nimport { transporter } from \"..\";\nimport jwt from \"jsonwebtoken\";\nimport {\n  getPendingKYCApi,\n  kycFun,\n  newsLetterFun,\n  updateKycApi,\n} from \"../query/kyc\";\nimport { mailOptions } from \"../views/email\";\n\nexport const createCompony = (req, res) => {\n  const {\n    companyName = \"\",\n    companyAddress = \"\",\n    companyCountry = \"\",\n    companyWebsite = \"\",\n    companyEmail = \"\",\n    companyId = \"\",\n    companyPhone = \"\",\n  } = req.body;\n  kycFun({\n    company_name: companyName,\n    company_address: companyAddress,\n    company_email: companyEmail,\n    company_phone: companyPhone,\n    company_website: companyWebsite,\n    company_country: companyCountry,\n    query_type: \"insert\",\n    companyId: companyId,\n  })\n    .then((company) => {\n      res.json({ company, success: true });\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const createNewsLetterFun = (req, res) => {\n  const { email } = req.body;\n  newsLetterFun({ email })\n    .then((news_letter) => {\n      res.json({ news_letter, success: true });\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const updateKycPL = (req, res) => {\n  const { companyId } = req.query;\n  const url = req.file ? req.file.path : null;\n  updateKycApi({ id: companyId, url, query_type: \"pl\" })\n    .then((resp) => {\n      res.json({ resp, success: true });\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const getPendingKYC = (req, res) => {\n  const {} = req.body;\n  getPendingKYCApi({ query_type: \"gpc\", pass_phrase: \"\" })\n    .then((resp) => {\n      res.json({ result: resp, success: true });\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const updateKycSP = (req, res) => {\n  const { companyId, companyEmail = \"\", companyName = \"\" } = req.query;\n  const url = req.file ? req.file.path : null;\n  transporter.sendMail(\n    mailOptions({\n      emailTo: companyEmail,\n      templateName: \"thanks\",\n      subject: \"successfully Registration\",\n      context: { company_name: companyName },\n    }),\n    function (error, info) {\n      if (error) {\n        res.status(500).json({ error });\n        console.log(error);\n      } else {\n        updateKycApi({ id: companyId, url, query_type: \"sp\" })\n          .then((resp) => {\n            res.json({ resp, success: true, info });\n          })\n          .catch((err) => {\n            res.status(500).json({ err });\n          });\n      }\n    }\n  );\n};\n\nexport const updateKycAppproved = (req, res) => {\n  const { id, company_email = \"\", company_name = \"\" } = req.body;\n  let passPhrase = generatePassPhrase(15);\n  let pass = passPhrase.length ? passPhrase.join() : null;\n  let link = `www.drugcipher.com/account/passphrass?id=${id}&pass=${pass}`;\n  transporter.sendMail(\n    mailOptions({\n      emailTo: company_email,\n      templateName: \"congrate\", \n      subject: \"Registration Completed\",\n      context: {\n        company_name: company_name,\n        link: link.replace(/[,\\s]+|[,\\s]+/g, \"%20\"),\n      },\n    }),\n    function (error, info) {\n      if (error) {\n        res.status(500).json({ error });\n        console.log(error);\n      } else {\n        updateKycApi({\n          id,\n          query_type: \"ap\",\n          pass_phrase: pass.replace(/[,\\s]+|[,\\s]+/g, \" \"),\n        })\n          .then((resp) => {\n            res.json({ resp, success: true, info });\n          })\n          .catch((err) => {\n            res.status(500).json({ err });\n          });\n      }\n    }\n  );\n};\n\nexport const updateKycReject = (req, res) => {\n  const { id, company_email = \"\", company_name = \"\" } = req.body;\n  let link = `www.drugcipher.com`;\n  transporter.sendMail(\n    mailOptions({\n      emailTo: company_email,\n      templateName: \"reject\",\n      subject: \"Registration Status\",\n      context: {\n        company_name: company_name,\n        link: link,\n      },\n    }),\n    function (error, info) {\n      if (error) {\n        res.status(500).json({ error });\n        console.log(error);\n      } else {\n        updateKycApi({ id, query_type: \"rj\", pass_phrase: pass })\n          .then((resp) => {\n            res.json({ resp, success: true, info });\n          })\n          .catch((err) => {\n            res.status(500).json({ err });\n          });\n      }\n    }\n  );\n};\n\nexport const regeneratePassPhrase = (req, res) => {\n  const { id } = req.query;\n  let passPhrase = generatePassPhrase(15);\n  let pass = passPhrase.length ? passPhrase.join() : null;\n  updateKycApi({\n    id,\n    query_type: \"gn\",\n    pass_phrase: pass.replace(/[,\\s]+|[,\\s]+/g, \" \"),\n  })\n    .then((resp) => {\n      res.json({\n        resp,\n        success: true,\n        pass: pass.replace(/[,\\s]+|[,\\s]+/g, \"%20\"),\n      });\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const recoverAccount = (req, res) => {\n  const { passPhrase } = req.body;\n  getPendingKYCApi({ pass_phrase: passPhrase, query_type: \"recover\" })\n    .then((resp) => {\n      //check for account\n      if (!resp.length) {\n        return res.json({ message: \"Account not found!\" });\n      } else {\n        const payload = { passPhrase }; //jwt payload\n        jwt.sign(\n          payload,\n          \"secret\",\n          {\n            expiresIn: \"30d\",\n          },\n          (err, token) => {\n            res.json({\n              success: true,\n              token: \"Bearer \" + token,\n              info: resp[0],\n            });\n          }\n        );\n      }\n    })\n    .catch((err) => {\n      res.status(500).json({ err });\n    });\n};\n\nexport const loadWithToken = (req, res) => {\n  const { token } = req.query;\n  jwt.verify(token, \"secret\", function (err, decoded) {\n    if (decoded) {\n      getPendingKYCApi({\n        pass_phrase: decoded.passPhrase,\n        query_type: \"recover\",\n      })\n        .then((resp) => {\n          res.json({\n            success: true,\n            info: resp[0],\n          });\n        })\n        .catch((err) => {\n          res.status(500).json({ err });\n        });\n    } else {\n      res.json({\n        success: false,\n      });\n    }\n  });\n};\n"]}